#include <bits/stdc++.h>using namespace std; #define int long long int#define endl '\n'#define all(x) x.begin(), x.end() //https://www.geeksforgeeks.org/dsa/smallest-subarray-with-sum-k-from-an-array/ void solve(){    int n;    cin >> n;    string s;    cin >> s;    int a = count(all(s), 'a');    int b = n - a;    if (a == b)    {        cout << 0 << endl;        return;    }    int tar = a - b;    vector<int> diff(n + 1, 0);    for (int i = 1; i <= n; i++)    {        diff[i] = diff[i - 1] + (s[i - 1] == 'a' ? 1 : -1);    }    map<int, int> mp;    mp[0] = 0;    int ans = n + 1;    for (int i = 1; i <= n; i++)    {        int ned = diff[i] - tar;        if (mp.find(ned) != mp.end())        {            int len = i - mp[ned];            ans = min(ans, len);        }        mp[diff[i]] = i;    }    if (ans >= n)        cout << -1 << endl;    else        cout << ans << endl;}int32_t main(){    ios_base::sync_with_stdio(0);    cin.tie(0);    int t = 1;    cin >> t;    while (t--)        solve();    return 0;}