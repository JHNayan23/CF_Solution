#include <bits/stdc++.h>using namespace std;// #include <ext/pb_ds/assoc_container.hpp>// #include <ext/pb_ds/tree_policy.hpp>// using namespace __gnu_pbds;// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>pbds;#define fastread() (ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL))#define ll long long#define int long long int#define pb push_back#define vll vector<ll>#define vpll vector<pair<ll, ll>>#define sll set<ll>#define mll map<ll, ll>#define F first#define S second#define fr(i, x, y) for (int i = x; i < y; i++)#define rfr(i, x, y) for (int i = n - 1; i >= 0; i--)#define ra(a, n) \    ll a[n];     \    fr(i, 0, n) cin >> a[i]#define rv(v, n)     \    vector<ll> v(n); \    fr(i, 0, n) cin >> v[i]#define debug(x) cout << #x << " " << x << '\n'#define endl "\n"#define Endl "\n"#define ENdl "\n"#define hae cout << "YES" << endl#define ds(xx) cout << xx << '\n';#define na cout << "NO" << endl#define all(x) x.begin(), x.end()#define rall(x) x.rbegin(), x.rend()#define setbit(x, k) (x |= (1LL << k))#define unsetbit(x, k) (x &= ~(1LL << k))#define checkbit(x, k) ((x >> k) & 1LL)const ll inf = 1e18;int dx[] = {-1, 1, 0, 0, -1, -1, 1, 1};int dy[] = {0, 0, -1, 1, -1, 1, -1, 1};const int N = 1005;const ll mod = 1e9 + 7; struct Mint{    int value;    Mint(long long v = 0)    {        v %= mod;        if (v < 0)            v += mod;        value = (int)v;    }    Mint &operator+=(const Mint &other)    {        value += other.value;        if (value >= mod)            value -= mod;        return *this;    }    Mint &operator-=(const Mint &other)    {        value -= other.value;        if (value < 0)            value += mod;        return *this;    }    Mint &operator*=(const Mint &other)    {        value = (long long)value * other.value % mod;        return *this;    }    friend Mint operator+(Mint a, const Mint &b) { return a += b; }    friend Mint operator-(Mint a, const Mint &b) { return a -= b; }    friend Mint operator*(Mint a, const Mint &b) { return a *= b; }    friend ostream &operator<<(ostream &os, const Mint &m) { return os << m.value; }}; Mint dp[2][N][N];bool vis[2][N][N];int n;Mint rec(int i,int k,int dir){    if(i==0 or i==n+1)return Mint(1);    if(k==1) return Mint(1);    if(vis[dir][i][k])return dp[dir][i][k];    vis[dir][i][k]=true;    Mint ans;    if(dir)ans=rec(i+1,k,dir)+rec(i-1,k-1,dir^1);    else ans=rec(i-1,k,dir)+rec(i+1,k-1,dir^1);    return dp[dir][i][k]=ans;}void solve(int tc){    cin>>n;int k;cin>>k;    memset(vis,0,sizeof(vis));    cout<<rec(1,k,1)<<'\n';} int32_t main(){    fastread();    ll T = 1;    cin >> T;    for (ll t = 1; t <= T; t++)        solve(t);    return 0;}