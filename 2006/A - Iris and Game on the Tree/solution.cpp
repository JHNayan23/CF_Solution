#include <bits/stdc++.h>using namespace std;// #include <ext/pb_ds/assoc_container.hpp>// #include <ext/pb_ds/tree_policy.hpp>// using namespace __gnu_pbds;// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>pbds;#define fastread() (ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL))#define ll long long#define int long long int#define pb push_back#define vll vector<ll>#define vpll vector<pair<ll, ll>>#define sll set<ll>#define mll map<ll, ll>#define F first#define S second#define fr(i, x, y) for (int i = x; i < y; i++)#define rfr(i, x, y) for (int i = n - 1; i >= 0; i--)#define ra(a, n) \    ll a[n];     \    fr(i, 0, n) cin >> a[i]#define rv(v, n)     \    vector<ll> v(n); \    fr(i, 0, n) cin >> v[i]#define debug(x) cout << #x << " " << x << '\n'#define endl "\n"#define Endl "\n"#define ENdl "\n"#define hae cout << "YES" << endl#define ds(xx) cout << xx << '\n';#define na cout << "NO" << endl#define all(x) x.begin(), x.end()#define rall(x) x.rbegin(), x.rend()#define setbit(x, k) (x |= (1LL << k))#define unsetbit(x, k) (x &= ~(1LL << k))#define checkbit(x, k) ((x >> k) & 1LL)const ll inf = 3e18;int dx[] = {-1, 1, 0, 0, -1, -1, 1, 1};int dy[] = {0, 0, -1, 1, -1, 1, -1, 1};const int N = 2e5 + 10;const ll mod = 1e9 + 7; void solve(int tc){    int n;    cin >> n;    vll deg(n + 1, 0);    int zero = 0, one = 0, why = 0, leafcharawhy = 0;    for (int i = 0; i < n - 1; i++)    {        int u, v;        cin >> u >> v;        deg[u]++;        deg[v]++;    }     string s;    cin >> s;    s = " " + s;    for (int i = 2; i <= n; i++)    {        if (deg[i] == 1)        {            if (s[i] == '0')                zero++;            else if (s[i] == '1')                one++;            else                why++;        }        else if (s[i] == '?')            leafcharawhy++;    }    int ZO = why;    ZO++;    ZO /= 2;    if (s[1] == '0')    {        cout << one + ZO << endl;        return;    }    if (s[1] == '1')    {        cout << zero + ZO << endl;    }    else    {        cout << max(one, zero) + (why + ((zero == one) ? (leafcharawhy % 2) : 0)) / 2 << endl;    }} int32_t main(){    fastread();    ll T = 1;    cin >> T;    for (ll t = 1; t <= T; t++)        solve(t);    return 0;}