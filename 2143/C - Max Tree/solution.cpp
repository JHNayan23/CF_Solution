#include <bits/stdc++.h>using namespace std;// #include <ext/pb_ds/assoc_container.hpp>// #include <ext/pb_ds/tree_policy.hpp>// using namespace __gnu_pbds;// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>pbds;#define fastread() (ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL))#define ll long long#define int long long int#define pb push_back#define vll vector<ll>#define vpll vector<pair<ll, ll>>#define sll set<ll>#define mll map<ll, ll>#define F first#define S second#define fr(i, x, y) for (int i = x; i < y; i++)#define rfr(i, x, y) for (int i = n - 1; i >= 0; i--)#define ra(a, n) \    ll a[n];     \    fr(i, 0, n) cin >> a[i]#define rv(v, n)     \    vector<ll> v(n); \    fr(i, 0, n) cin >> v[i]#define debug(x) cout << #x << " " << x << '\n'#define endl "\n"#define Endl "\n"#define ENdl "\n"#define hae cout << "YES" << endl#define ds(xx) cout << xx << '\n';#define na cout << "NO" << endl#define all(x) x.begin(), x.end()#define rall(x) x.rbegin(), x.rend()#define setbit(x, k) (x |= (1LL << k))#define unsetbit(x, k) (x &= ~(1LL << k))#define checkbit(x, k) ((x >> k) & 1LL)const ll inf = 3e18;int dx[] = {-1, 1, 0, 0, -1, -1, 1, 1};int dy[] = {0, 0, -1, 1, -1, 1, -1, 1};const int N = 2e5 + 10;const ll mod = 1e9 + 7; // topological sortvoid solve(int tc){    int n;    cin >> n;    vector<int> ind(n + 1, 0);    vector<int> adj[n + 1];    for (int i = 0; i < n - 1; i++)    {        int u, v;        cin >> u >> v;        int x, y;        cin >> x >> y;        if (x > y)        {            ind[v]++;            adj[u].push_back(v);        }        else        {            ind[u]++;            adj[v].push_back(u);        }    }    set<int> s;    for (int i = 1; i <= n; i++)    {        if (ind[i] == 0)            s.insert(i);    }    int arr[n + 1];    int x = n;    while (!s.empty())    {        auto f = s.begin();        int val = *f;        s.erase(f);        arr[val] = x--;        for (auto u : adj[val])        {            ind[u]--;            if (ind[u] == 0)                s.insert(u);        }    }    for (int i = 1; i <= n; i++)        cout << arr[i] << " ";    cout << endl;} int32_t main(){    fastread();    ll T = 1;    cin >> T;    for (ll t = 1; t <= T; t++)        solve(t);    return 0;}