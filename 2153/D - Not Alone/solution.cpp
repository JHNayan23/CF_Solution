#include <bits/stdc++.h>using namespace std; #define int long long int#define endl '\n'#define all(x) x.begin(), x.end()const int INF = 2e18; int n;int a[200005], b[200005], c[200005], dp[200005]; int Oww(int i, int *arr){    if (i >= n)        return 0;    int &ret = dp[i];    if (ret != INF)        return ret;    if (i + 1 < n)    {        ret = min(ret, llabs(arr[i] - arr[i + 1]) + Oww(i + 2, arr));    }    if (i + 2 < n)    {        int mx = max({arr[i], arr[i + 1], arr[i + 2]});        int mn = min({arr[i], arr[i + 1], arr[i + 2]});        ret = min(ret, (mx - mn) + Oww(i + 3, arr));    }     return ret;} void solve(){    cin >> n;    for (int i = 0; i < n; ++i)        cin >> a[i];    fill(dp, dp + n, INF);    int ans = Oww(0, a);    b[0] = a[n - 1];    for (int i = 1; i < n; ++i)        b[i] = a[i - 1];    fill(dp, dp + n, INF);    ans = min(ans, Oww(0, b));    c[0] = b[n - 1];    for (int i = 1; i < n; ++i)        c[i] = b[i - 1];    fill(dp, dp + n, INF);    ans = min(ans, Oww(0, c));    cout << ans << '\n';}int32_t main(){    ios_base::sync_with_stdio(0);    cin.tie(0);    int t = 1;    cin >> t;    while (t--)        solve();    return 0;}