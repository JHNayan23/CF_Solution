#include <bits/stdc++.h>using namespace std; #define int long long int#define endl '\n'#define all(x) x.begin(), x.end() void solve(){    int n, k;    cin >> n >> k;    map<int, set<int>> g;    for (int i = 0; i < n - 1; i++)    {        int u, v;        cin >> u >> v;        g[u].insert(v);        g[v].insert(u);    }    map<int, int> sz;    map<int, int> par;    stack<pair<int, int>> st;    st.push({1, 0});    vector<int> v;     while (!st.empty())    {        auto [node, p] = st.top();        st.pop();         if (sz.count(node))            continue;         v.push_back(node);        par[node] = p;         for (int ch : g[node])        {            if (ch != p)            {                st.push({ch, node});            }        }    }    reverse(all(v));    for (int node : v)    {        sz[node] = 1;        for (int ch : g[node])        {            if (ch != par[node])            {                sz[node] += sz[ch];            }        }    }    int ans = 0;    int th = n - k;    for (int v = 1; v <= n; v++)    {        int tot = 0;        for (int nb : g[v])        {            int s;            if (nb == par[v])            {                s = n - sz[v];            }            else            {                s = sz[nb];            }             if (s > th)            {                tot += s;            }        }         ans += n - tot;    }    cout << ans << '\n';}int32_t main(){    ios_base::sync_with_stdio(0);    cin.tie(0);    int t = 1;    cin >> t;    while (t--)        solve();    return 0;}