#include <bits/stdc++.h>using namespace std; #define int long long int#define endl '\n'#define all(x) x.begin(), x.end() struct range{    int l, r, dir;}; void solve(){    int n, k, x;    cin >> n >> k >> x;    int a[n];    for (int i = 0; i < n; i++)        cin >> a[i];    sort(a, a + n);     vector<range> g;    g.push_back({0, a[0] - 1});    g.push_back({a[n - 1] + 1, x, -1});     for (int i = 1; i < n; i++)    {        int l = a[i - 1] + 1;        int r = a[i] - 1;        int mid = (l + r) / 2;        g.push_back({l, mid, -1});        g.push_back({mid + 1, r, 1});    }     struct cmp    {        bool operator()(range &a, range &b)        {            return (a.r - a.l) < (b.r - b.l);        }    };     priority_queue<range, vector<range>, cmp> pq;    for (auto &x : g)        pq.push(x);     vector<int> ans;    set<int> s;     while (k--)    {        auto top = pq.top();        pq.pop();        if (top.dir == -1)        {            if (s.count(top.r))            {                k++;                continue;            }            ans.push_back(top.r--);        }        else        {            if (s.count(top.l))            {                k++;                continue;            }            ans.push_back(top.l++);        }        s.insert(ans.back());        pq.push(top);    }     sort(all(ans));    for (auto &x : ans)        cout << x << " ";    cout << '\n';}int32_t main(){    ios_base::sync_with_stdio(0);    cin.tie(0);    int t = 1;    cin >> t;    while (t--)        solve();    return 0;}